{
    "type": [
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 3.6.3 (2020-02-29) -- \"Holding the Windsock\"\nCopyright (C) 2020 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin15.6.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(shiny); runApp('Shiny_examples/Shiny_ggplot_protocols.R')",
        "\u001B[37m── \u001B[1mAttaching packages\u001B[22m ────────────────────────────────────────────────────────────────── tidyverse 1.3.1 ──\u001B[39m\n",
        "\u001B[37m\u001B[32m✓\u001B[37m \u001B[34mggplot2\u001B[37m 3.3.5     \u001B[32m✓\u001B[37m \u001B[34mpurrr  \u001B[37m 0.3.4\n\u001B[32m✓\u001B[37m \u001B[34mtibble \u001B[37m 3.1.2     \u001B[32m✓\u001B[37m \u001B[34mdplyr  \u001B[37m 1.0.6\n\u001B[32m✓\u001B[37m \u001B[34mtidyr  \u001B[37m 1.1.3     \u001B[32m✓\u001B[37m \u001B[34mstringr\u001B[37m 1.4.0\n\u001B[32m✓\u001B[37m \u001B[34mreadr  \u001B[37m 2.0.0     \u001B[32m✓\u001B[37m \u001B[34mforcats\u001B[37m 0.5.1\u001B[39m\n",
        "\u001B[37m── \u001B[1mConflicts\u001B[22m ───────────────────────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mfilter()\u001B[37m masks \u001B[34mstats\u001B[37m::filter()\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mlag()\u001B[37m    masks \u001B[34mstats\u001B[37m::lag()\u001B[39m\n",
        "\nListening on http://127.0.0.1:3135\n",
        "`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n",
        "\n",
        "\n",
        "> ",
        "library(learnr)",
        "> ",
        "library(tidyverse)",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE)",
        "> ",
        "df_spectra <- read_csv(\"FPbase_Spectra_4FPs.csv\", show_col_types = FALSE)",
        "Error: 'FPbase_Spectra_4FPs.csv' does not exist in current working directory ('/Users/Joachim/surfdrive/blogs/Blogs-als-MD/DataViz-protocols/Protocols_interactive').\n",
        "> ",
        "library(learnr)",
        "> ",
        "library(tidyverse)",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE)",
        "> ",
        "library(learnr)",
        "> ",
        "library(tidyverse)",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE)",
        "> ",
        "1 + 1",
        "[1] 2\n",
        "> ",
        "add <- function() {",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "#Assign the value of 1 to x:",
        "> ",
        "x <- 1",
        "> ",
        "#Add a value of 1 to x:",
        "> ",
        "x + 1",
        "[1] 2\n",
        "> ",
        "df_spectra <- read_csv(\"FPbase_Spectra_4FPs.csv\", show_col_types = FALSE)",
        "> ",
        "df_spectra_tidy <-",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    df_spectra,",
        "+ ",
        "    cols = -Wavelength,",
        "+ ",
        "    names_to = \"Sample\",",
        "+ ",
        "    values_to = \"Intensity\"",
        "+ ",
        "  ) %>%",
        "+ ",
        "  drop_na(Intensity) %>%",
        "+ ",
        "  separate(Sample, c(\"Fluorescent Protein\", \"Spectrum\"), sep = \" \")",
        "> ",
        "View(df_spectra_tidy)",
        "> ",
        "problems()",
        "> ",
        "---",
        "+ ",
        "title: \"Protocol 1\"",
        "Error in -title : invalid argument to unary operator\n",
        "> ",
        "author: \"Joachim Goedhart\"",
        "Error: object 'author' not found\n",
        "> ",
        "date: \"`r Sys.Date()`\"",
        "Error in date:\"`r Sys.Date()`\" : NA/NaN argument\n",
        "In addition: ",
        "Warning message:\n",
        "NAs introduced by coercion \n",
        "> ",
        "output: html_document",
        "Error: object 'output' not found\n",
        "> ",
        "---",
        "+ ",
        "",
        "+ ",
        "## Protocol 1 - Spectra of fluorescent proteins {#protocol-1}",
        "+ ",
        "",
        "+ ",
        "This protocol describes how you can turn a csv with spectral data that is obtained from FPbase.org into a plot of those spectra. First, we load the required package:",
        "Error: unexpected symbol in:\n\"\nThis protocol\"\n",
        "> ",
        "",
        "> ",
        "```{r }",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "library(tidyverse)",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "",
        "> ",
        "For this data visualization, I selected several spectra from fluorescent proteins at FPbase.org: [https://www.fpbase.org/spectra/?s=1746,6551,101,102,123,124,1604,1606&showY=0&showX=1&showGrid=0&areaFill=1&logScale=0&scaleEC=0&scaleQY=0&shareTooltip=1&palette=wavelength](https://www.fpbase.org/spectra/?s=1746,6551,101,102,123,124,1604,1606&showY=0&showX=1&showGrid=0&areaFill=1&logScale=0&scaleEC=0&scaleQY=0&shareTooltip=1&palette=wavelength)",
        "Error: unexpected symbol in \"For this\"\n",
        "> ",
        "",
        "> ",
        "The data was downloaded in CSV format (by clicking on the button in the lower right corner of the webpage) and renamed to 'FPbase_Spectra_4FPs.csv'.",
        "Error: unexpected symbol in \"The data\"\n",
        "> ",
        "We read the data from the CSV by using the `read_csv()` function. This function is part of the tidy verse and loads the data as a tibble. It also guesses type of data for each column. To hide that information, we use `show_col_types = FALSE` here.",
        "Error: unexpected symbol in \"We read\"\n",
        "> ",
        "",
        "> ",
        "```{r }",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "df_spectra <- read_csv(\"FPbase_Spectra_4FPs.csv\", show_col_types = FALSE)",
        "\r\u001B[1mindexed\u001B[0m \u001B[32m3.00B\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m135.30kB/s\u001B[0m\r                                                                                                         \r\u001B[1mindexed\u001B[0m \u001B[32m1.00TB\u001B[0m in \u001B[36m 0s\u001B[0m, \u001B[32m1.78PB/s\u001B[0m\r                                                                                                         \r",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "",
        "> ",
        "Let's briefly look at what we have loaded:",
        "+ ",
        "",
        "+ ",
        "```{r message=FALSE, warning=FALSE}",
        "+ ",
        "glimpse(df_spectra)",
        "+ ",
        "```",
        "+ ",
        "",
        "+ ",
        "The data needs conversion to a tidy format before plotting. Since we have a single continuous data column with Wavelength information that is used for the x-axis, it is excluded from the operation: ",
        "+ ",
        "",
        "+ ",
        "```{r }",
        "+ ",
        "df_spectra_tidy <-",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    df_spectra,",
        "+ ",
        "    cols = -Wavelength,",
        "+ ",
        "    names_to = \"Sample\",",
        "+ ",
        "    values_to = \"Intensity\"",
        "+ ",
        "  )",
        "+ ",
        "```",
        "+ ",
        "",
        "+ ",
        "There are several rows that have NA values for Intensity and this is how to get rid of that:",
        "+ ",
        "",
        "+ ",
        "```{r }",
        "+ ",
        "df_spectra_tidy <- df_spectra_tidy %>% drop_na(Intensity)",
        "+ ",
        "```",
        "+ ",
        "",
        "+ ",
        "The column 'Sample' has labels for the fluorescent protein and the type of spectrum. We can separate that column into two different columns that we name 'Fluorescent Protein' and 'Spectrum':",
        "Error: unexpected string constant in:\n\"\nThe column '\"\n",
        "> ",
        "",
        "> ",
        "```{r }",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "df_spectra_tidy <- df_spectra_tidy %>%",
        "+ ",
        "  separate(Sample, c(\"Fluorescent Protein\", \"Spectrum\"), sep = \" \")",
        "Error: object 'Sample' not found\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "",
        "> ",
        "Let's do a first attempt and plot the data:",
        "+ ",
        "",
        "+ ",
        "```{r }",
        "+ ",
        "ggplot(",
        "+ ",
        "  data = df_spectra_tidy,",
        "+ ",
        "  aes(x = Wavelength, y = Intensity, color = `Fluorescent Protein`)",
        "+ ",
        ") +",
        "+ ",
        "  geom_line(aes(linetype = Spectrum), size = 1)",
        "+ ",
        "```",
        "+ ",
        "",
        "+ ",
        "This looks pretty good already. Now let's change the order of the fluorescent proteins to their order in the plot:",
        "Error: unexpected string constant in:\n\"\nThis looks pretty good already. Now let'\"\n",
        "> ",
        "",
        "> ",
        "```{r }",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "df_spectra_tidy <- df_spectra_tidy %>%",
        "+ ",
        "  mutate(`Fluorescent Protein` = forcats::fct_relevel(",
        "+ ",
        "    `Fluorescent Protein`,",
        "+ ",
        "    c(\"mTurquoise2\", \"mNeonGreen\", \"mScarlet-I\", \"miRFP670\")",
        "+ ",
        "  ))",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "",
        "> ",
        "We define the plot object and add an extra geometry, `geom_area()` to fill the area under the curves:",
        "Error: unexpected symbol in \"We define\"\n",
        "> ",
        "",
        "> ",
        "```{r }",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "p <-",
        "+ ",
        "  ggplot(",
        "+ ",
        "    data = df_spectra_tidy,",
        "+ ",
        "    aes(",
        "+ ",
        "      x = Wavelength, y = Intensity,",
        "+ ",
        "      fill = `Fluorescent Protein`",
        "+ ",
        "    )",
        "+ ",
        "  ) +",
        "+ ",
        "  geom_line(aes(linetype = Spectrum),",
        "+ ",
        "    size = 0.5, alpha = 0.5",
        "+ ",
        "  ) +",
        "+ ",
        "  geom_area(",
        "+ ",
        "    aes(linetype = Spectrum),",
        "+ ",
        "    color = NA,",
        "+ ",
        "    position = \"identity\",",
        "+ ",
        "    size = 1,",
        "+ ",
        "    alpha = 0.5",
        "+ ",
        "  )",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "",
        "> ",
        "Let's check the result:",
        "+ ",
        "",
        "+ ",
        "```{r}",
        "+ ",
        "p",
        "+ ",
        "```",
        "+ ",
        "",
        "+ ",
        "Next, we set the limits of the axis and force the y-axis to start at 0",
        "+ ",
        "",
        "+ ",
        "```{r }",
        "+ ",
        "p <-",
        "+ ",
        "  p + scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1)) + ",
        "+ ",
        "  scale_x_continuous(expand = c(0,0), limits = c(350, 810))",
        "+ ",
        "```",
        "+ ",
        "",
        "+ ",
        "Add labels:",
        "+ ",
        "",
        "+ ",
        "```{r }",
        "+ ",
        "p <-",
        "+ ",
        "  p + labs(",
        "+ ",
        "    title = \"Spectra of Fluorescent Proteins\",",
        "+ ",
        "    x = \"Wavelength [nm]\",",
        "+ ",
        "    y = \"Normalized Intensity [a.u.]\",",
        "+ ",
        "    caption = \"(based on data from FPbase.org)\",",
        "+ ",
        "    tag = \"Protocol 1\"",
        "+ ",
        "  )",
        "+ ",
        "```",
        "+ ",
        "",
        "+ ",
        "Modify the layout by adjusting the theme. Comments are used to explain effect of the individual lines of code:",
        "+ ",
        "",
        "+ ",
        "```{r }",
        "+ ",
        "p <-",
        "+ ",
        "  #Set text size",
        "+ ",
        "  p + theme_light(base_size = 14) + theme(",
        "+ ",
        "    plot.caption = element_text(",
        "+ ",
        "      color = \"grey80\",",
        "+ ",
        "      hjust = 1",
        "+ ",
        "    ),",
        "+ ",
        "    #Remove grid",
        "+ ",
        "    panel.grid.major = element_blank(),",
        "+ ",
        "    panel.grid.minor = element_blank(),",
        "+ ",
        "    #Set position of legend",
        "+ ",
        "    legend.position = \"top\",",
        "+ ",
        "    legend.justification = \"left\"",
        "+ ",
        "    #Define the legend layout",
        "+ ",
        "  ) + guides(",
        "+ ",
        "    linetype = \"none\",",
        "+ ",
        "    fill = guide_legend(title = NULL, label.position = \"right\")",
        "+ ",
        "  )",
        "+ ",
        "```",
        "+ ",
        "",
        "+ ",
        "```{r}",
        "+ ",
        "p",
        "+ ",
        "```",
        "+ ",
        "",
        "+ ",
        "We are almost there, except that the colors of the plot do not match with the natural colors of the fluorescent proteins. Let's fix that by defining a custom color palette. The order of the colors matches with the order of the fluorescent proteins that was defined earlier:",
        "Error: unexpected string constant in:\n\"\nWe are almost there, except that the colors of the plot do not match with the natural colors of the fluorescent proteins. Let'\"\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "```{r }",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "custom_colors <- c(\"blue\", \"green\", \"orange\", \"red\")",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "",
        "> ",
        "To apply the custom colors to the filled area:",
        "Error: unexpected symbol in \"To apply\"\n",
        "> ",
        "",
        "> ",
        "```{r }",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "p <- p + scale_fill_manual(values = custom_colors)",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "",
        "> ",
        "This is the result:",
        "Error: unexpected symbol in \"This is\"\n",
        "> ",
        "",
        "> ",
        "```{r }",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "p",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "",
        "> ",
        "To save this plot as a PNG file:",
        "Error: unexpected symbol in \"To save\"\n",
        "> ",
        "",
        "> ",
        "```{r }",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "png(file=paste0(\"Protocol_1.png\"), width = 4000, height = 2600, units = \"px\", res = 400)",
        "> ",
        "  p",
        "> ",
        "dev.off()",
        "RStudioGD \n        2 \n",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "df_spectra_tidy <-",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    df_spectra,",
        "+ ",
        "    cols = -Wavelength,",
        "+ ",
        "    names_to = \"Sample\",",
        "+ ",
        "    values_to = \"Intensity\"",
        "+ ",
        "  ) %>%",
        "+ ",
        "  drop_na(Intensity) %>%",
        "+ ",
        "  separate(Sample, c(\"Fluorescent Protein\", \"Spectrum\"), sep = \" \")",
        "Warning message:\n",
        "In depth(path) :",
        " reached elapsed time limit\n",
        "> ",
        "",
        "> ",
        "df_spectra_tidy <- df_spectra_tidy %>%",
        "+ ",
        "  mutate(`Fluorescent Protein` = forcats::fct_relevel(",
        "+ ",
        "    `Fluorescent Protein`,",
        "+ ",
        "    c(\"mTurquoise2\", \"mNeonGreen\", \"mScarlet-I\", \"miRFP670\")",
        "+ ",
        "  ))",
        "> ",
        "  ggplot(",
        "+ ",
        "    data = df_spectra_tidy,",
        "+ ",
        "    aes(",
        "+ ",
        "      x = Wavelength, y = Intensity,",
        "+ ",
        "      fill = `Fluorescent Protein`",
        "+ ",
        "    )",
        "+ ",
        "  ) +",
        "+ ",
        "  geom_line(aes(linetype = Spectrum),",
        "+ ",
        "    size = 0.5, alpha = 0.5",
        "+ ",
        "  ) +",
        "+ ",
        "  geom_area(",
        "+ ",
        "    aes(linetype = Spectrum),",
        "+ ",
        "    color = NA,",
        "+ ",
        "    position = \"identity\",",
        "+ ",
        "    size = 1,",
        "+ ",
        "    alpha = 0.5",
        "+ ",
        "  ) + scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1)) + ",
        "+ ",
        "  scale_x_continuous(expand = c(0,0), limits = c(350, 810)) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Spectra of Fluorescent Proteins\",",
        "+ ",
        "    x = \"Wavelength [nm]\",",
        "+ ",
        "    y = \"Normalized Intensity [a.u.]\",",
        "+ ",
        "    caption = \"(based on data from FPbase.org)\",",
        "+ ",
        "    tag = \"Protocol 1\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_light(base_size = 14) + theme(",
        "+ ",
        "    plot.caption = element_text(",
        "+ ",
        "      color = \"grey80\",",
        "+ ",
        "      hjust = 1",
        "+ ",
        "    ),",
        "+ ",
        "    #Remove grid",
        "+ ",
        "    panel.grid.major = element_blank(),",
        "+ ",
        "    panel.grid.minor = element_blank(),",
        "+ ",
        "    #Set position of legend",
        "+ ",
        "    legend.position = \"top\",",
        "+ ",
        "    legend.justification = \"left\"",
        "+ ",
        "    #Define the legend layout",
        "+ ",
        "  ) + guides(",
        "+ ",
        "    linetype = \"none\",",
        "+ ",
        "    fill = guide_legend(title = NULL, label.position = \"right\")",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_fill_manual(values = c(\"blue\", \"green\", \"orange\", \"red\"))",
        "> ",
        "  ",
        "> ",
        "  ",
        "> ",
        "  ",
        "> ",
        "df_spectra_tidy <-",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    df_spectra,",
        "+ ",
        "    cols = -Wavelength,",
        "+ ",
        "    names_to = \"Sample\",",
        "+ ",
        "    values_to = \"Intensity\"",
        "+ ",
        "  ) %>%",
        "+ ",
        "  drop_na(Intensity) %>%",
        "+ ",
        "  separate(Sample, c(\"Fluorescent Protein\", \"Spectrum\"), sep = \" \")",
        "> ",
        "",
        "> ",
        "df_spectra_tidy <- df_spectra_tidy %>%",
        "+ ",
        "  mutate(`Fluorescent Protein` = forcats::fct_relevel(",
        "+ ",
        "    `Fluorescent Protein`,",
        "+ ",
        "    c(\"mTurquoise2\", \"mNeonGreen\", \"mScarlet-I\", \"miRFP670\")",
        "+ ",
        "  ))",
        "> ",
        "  ggplot(",
        "+ ",
        "    data = df_spectra_tidy,",
        "+ ",
        "    aes(",
        "+ ",
        "      x = Wavelength, y = Intensity,",
        "+ ",
        "      fill = `Fluorescent Protein`",
        "+ ",
        "    )",
        "+ ",
        "  ) +",
        "+ ",
        "  geom_line(aes(linetype = Spectrum),",
        "+ ",
        "    size = 0.5, alpha = 0.5",
        "+ ",
        "  ) +",
        "+ ",
        "  geom_area(",
        "+ ",
        "    aes(linetype = Spectrum),",
        "+ ",
        "    color = NA,",
        "+ ",
        "    position = \"identity\",",
        "+ ",
        "    size = 1,",
        "+ ",
        "    alpha = 0.5",
        "+ ",
        "  ) + scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1)) + ",
        "+ ",
        "  scale_x_continuous(expand = c(0,0), limits = c(350, 810)) +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Spectra of Fluorescent Proteins\",",
        "+ ",
        "    x = \"Wavelength [nm]\",",
        "+ ",
        "    y = \"Normalized Intensity [a.u.]\",",
        "+ ",
        "    caption = \"(based on data from FPbase.org)\",",
        "+ ",
        "    tag = \"Protocol 1\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_light(base_size = 14) + theme(",
        "+ ",
        "    plot.caption = element_text(",
        "+ ",
        "      color = \"grey80\",",
        "+ ",
        "      hjust = 1",
        "+ ",
        "    ),",
        "+ ",
        "    #Remove grid",
        "+ ",
        "    panel.grid.major = element_blank(),",
        "+ ",
        "    panel.grid.minor = element_blank(),",
        "+ ",
        "    #Set position of legend",
        "+ ",
        "    legend.position = \"top\",",
        "+ ",
        "    legend.justification = \"left\"",
        "+ ",
        "    #Define the legend layout",
        "+ ",
        "  ) + guides(",
        "+ ",
        "    linetype = \"none\",",
        "+ ",
        "    fill = guide_legend(title = NULL, label.position = \"right\")",
        "+ ",
        "  ) +",
        "+ ",
        "  scale_fill_manual(values = c(\"blue\", \"green\", \"orange\", \"red\"))",
        "> ",
        "  ",
        "> ",
        "  ",
        "> ",
        "  ",
        "> ",
        "unlink('Protocols/Protocols_interactive_cache', recursive = TRUE)",
        "> ",
        "unlink('Protocols/Protocols_interactive_cache', recursive = TRUE)",
        "> ",
        "rmarkdown::shiny_prerendered_clean('Protocols/Protocols_interactive.Rmd')",
        "\nRestarting R session...\n\n"
    ]
}